exit
"#{Rails.root}/lib/static_blog/manifest.yml"
#{Rails.root}/lib/static_blog/manifest.yml"
Rails.root+"/lib/static_blog/manifest.yml"
File.exists?(Rails.root+"/lib/static_blog/manifest.yml")
exit
articles
params[:id]
articles.grep(/params[:id]/).any?
exit
articles.grep(/params[:id]/).any?
articles.grep(/params[:id]/)
params[:id]
continue
articles = Dir["#{Rails.root}/app/views/blog/_*"].map {|f| f.split("/")[-1].gsub(".html.erb","")}.map{|f| f[1..-1]}
articles = Dir["#{Rails.root}/app/views/blog/_*"].map {|f| f.split("/")[-1].gsub(".html.erb","")}.map{|f| f}
articles = Dir["#{Rails.root}/app/views/blog/_*"].map {|f| f.split("/")[-1].gsub(".html.erb","")}.map{|f| f[1,-1]}
articles = Dir["#{Rails.root}/app/views/blog/_*"].map {|f| f.split("/")[-1].gsub(".html.erb","")}
articles = Dir["#{Rails.root}/app/views/blog/_*"].map {|f| f.split("/")[-1].gsub(".html.erb","")
articles = Dir["#{Rails.root}/app/views/blog/_*"]
articles
articles.include?(params[:id])articles = Dir["#{Rails.root}/app/views/blog/_*"]articles = Dir["#{Rails.root}/app/views/blog/_*"]
articles
articles.grep(/params[:id]/)
params[:id] = "why_devschool_teaches_ruby_and_ruby_on_rails"
params[:id]
articles.grep(/params[:id]/)
exit
articles.include?(params[:id])
articles.include?("_"+params[:id])
params[:id] = "_why_devschool_teaches_ruby_and_ruby_on_rails"
articles.include?("_"+params[:id])
articles
articles.include?(params[:id])
params[:id] = "why-devschool-teaches-ruby-and-ruby-on-rails"
articles.include?(params[:id])
exit
params[:id]
params
articles
continue
article
exit
article
exit
article.meta[:title]
article.meta
article.title
exit
article[:meta]
article
exit
article
exit
article.meta
article.markdown
exit
article.
article
exit
meta
md
md, meta = Article.from_markdown(File.read(src))
exit
meta
md
md, meta = Article.from_markdown(File.read(src))
exit
hash[:author]
hash
continue
hash
exit
to_hash(meta[2])
meta[2]
[to_hash(meta[2]), html]
html = src.sub(meta[0], '')
meta = src.match(/(---\n((.|\n)*)---\n)/)
exit
meta[2]
html = src.sub(meta[0], '')
meta = src.match(/(---\n((.|\n)*)---\n)/)
html = src.sub(meta[0], '')
meta = src.match(/(---\n((.|\n)*)---\n)/)[2]
meta = src.match(/(---\n((.|\n)*)---\n)/)
continue
exit
key, value = attr.split(":").map(&:strip)
key, value = attr.split(":").map(&:trim)
attr
hash
continue
html = src.sub(meta[0], '')
meta = src.match(/(---\n((.|\n)*)---\n)/)
exit
src.match(/(---\n((.|\n)*)---\n)/)[2]\e
src.match(/(---\n((.|\n)*)---\n)/)[2]
src.match(/(---\n((.|\n)*)---\n)/)[1]
src.match(/(---\n((.|\n)*)---\n)/)[0]
src.match(/(---\n((.|\n)*)---\n)/)
src.match(/(---\n(.*)---\n)/)
src.match(/(---\))/)[0]
src.match(/(---\n)/)[0]
src.match(/(---\n)/)
src.match(/(---\n(.*)---\n)/)
src
exit
src
src.match(/(---\n)/)
src.match(/(---\n(.*))/)
src.match(/(---\n(.*)---\n)/)
exit
[md.sub(meta,""), meta]
md
meta
exit
xit
html, meta = md_to_html(src)
md.sub(md.match(/---\nauthor:\s?(.*)\n---\n/)[0],"")
md.match(/---\nauthor:\s?(.*)\n---\n/)[0]
md.match(/---\nauthor:\s?(.*)\n/)[0]
md.match(/---\nauthor:\s?(.*)/)[0]
md.match(/---\nauthor:\s?/)[0]
md.match(/---\nauthor:\s/)[0]
md.match(/---\nauthor:/)[0]
md.match(/---\nauthor: (*.)/)[0]
md.match(/---\nauthor:%s?(*.)/)[0]
md.match(/---\nauthor:\s?(*.)/)[0]
md.match(/---\nauthor:\s?(*.)\n/)[0]
md.match(/---\n/)[0]
md.match(/---\n/)
md
md.match(/---\nauthor:%s?(%w+)\n---\n/)
exit
src
exit
`mkdir -p #{Rails.root}/public/blog/#{p}`
p
exit
`ls /Users/jimokelly/development/devschool/www/public/blog/`
exit
`ls /Users/jimokelly/development/devschool/www/public/blog/`
`ls /Users/jimokelly/development/devschool/www/public/blog/why-devschool-teaches-ruby-and-ruby-on-rails`
exit
`mkdir -p #{Rails.root}/public/blog/#{p}`
`mkdir -p "#{Rails.root}/public/blog/#{p}"`
`ls /Users/jimokelly/development/devschool/www/public/blog/why-devschool-teaches-ruby-and-ruby-on-rails`
p
